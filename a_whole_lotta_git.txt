Question: Why is it called 'Git'?
Answer: Apparently Linus Torvalds confirmed that GIT was named after British slang for a stupid or unpleasant person. I like this definition the most.

Question: How can I undo a push and merge into master that I made one night
          after I lost my mind and coded something really stupid?
Answer: You can do "git revert [hash]" to undo to a previous commit. This is the safest git "undo" button.

Question: How do I check to see if anyone has made any updates to the origin before pushing?
Answer: You could do 'git pull origin master' to pull any updates that may have been made

Question: What is the staging area?
Answer: this is where we organize what we want committed into the repository.

Question: Why do we need a staging area?
Answer: Because we can pick and choose what we want committed. this will allow us to be more detailed with our commits. this is especially useful when dealing with large projects.

Question: Why do we need to create a branch when uploading our work?
Answer: It makes it easier to keep track of what has been updated, especially when multiple people work on the same project.

Question: Is it possible to make a custom search domain for repositories?

Question: Why is the Github logo a cat?

Answer: Apparently, a guy named Simon Oxley created the octocat (along with the Twitter 'bird') for iStockphoto which Github liked and purchased from the site.
https://en.wikipedia.org/wiki/Simon_Oxley

Question: Why would someone use a Central VCS like SVN instead of a Distributed VCS like Git?

Question: Is there anything that GitHub does that Git cannot do, or vice-versa?

Question: What is the difference between Git and Github?

Answer: Git is a version control system used to manage and keep track of your source code history whereas GitHub is a cloud-based hosting service that lets you manage Git repositories.

Question: How do you configure git so you don't have to enter your github password everytime you merge into the remote repository?

Question: Is there anything that GitHub does that Git cannot do, or vice-versa?

Question: What is the difference between Git and Github?
Answer: Git is an open-source tool devs can install locally, GitHub is an online service where devs who use Git can connect to and upload or download resources.

Question: What does 'git branch --merged' do?

Answer: Finds the latest common commit between the branches

Question: Why do we create branches?

Question: Why was git created?

Question: What system was used before git?

Question: How can you change the name of the master branch?

Question: Can someone else have access to a branch?

Question: How secure is it to use github?

Question: Can I make my branch private or public?